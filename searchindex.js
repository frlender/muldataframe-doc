Search.setIndex({"docnames": ["__template/index", "api/groupby/__iter__", "api/groupby/by", "api/groupby/call", "api/groupby/groupBy", "api/groupby/indexType", "api/groupby/index_agg", "api/groupby/indices", "api/groupby/mulgroupby", "api/groupby/numpy_functions", "api/groupby/parent", "api/index", "api/muldataframe.MulSeries", "api/muldataframe/__iter__", "api/muldataframe/call", "api/muldataframe/columns", "api/muldataframe/copy", "api/muldataframe/df", "api/muldataframe/drop", "api/muldataframe/drop_duplicates", "api/muldataframe/ds", "api/muldataframe/equals", "api/muldataframe/groupby", "api/muldataframe/iloc", "api/muldataframe/index", "api/muldataframe/indices", "api/muldataframe/insert", "api/muldataframe/iterrows", "api/muldataframe/loc", "api/muldataframe/mcols", "api/muldataframe/mcolumns", "api/muldataframe/melt", "api/muldataframe/mindex", "api/muldataframe/mloc", "api/muldataframe/muldataframe", "api/muldataframe/nloc", "api/muldataframe/pcols", "api/muldataframe/pcolumns", "api/muldataframe/pindex", "api/muldataframe/primary_columns", "api/muldataframe/primary_index", "api/muldataframe/query", "api/muldataframe/reset_index", "api/muldataframe/set_index", "api/muldataframe/shape", "api/muldataframe/sort_values", "api/muldataframe/transpose", "api/muldataframe/values", "api/mulseries/01_index_old", "api/mulseries/__iter__", "api/mulseries/call", "api/mulseries/copy", "api/mulseries/drop", "api/mulseries/drop_duplicates", "api/mulseries/ds", "api/mulseries/equals", "api/mulseries/groupby", "api/mulseries/iloc", "api/mulseries/index", "api/mulseries/indices", "api/mulseries/insert", "api/mulseries/loc", "api/mulseries/mindex", "api/mulseries/mloc", "api/mulseries/mname", "api/mulseries/mulseries", "api/mulseries/name", "api/mulseries/nloc", "api/mulseries/pindex", "api/mulseries/pname", "api/mulseries/primary_index", "api/mulseries/primary_name", "api/mulseries/query", "api/mulseries/reset_index", "api/mulseries/shape", "api/mulseries/sort_values", "api/mulseries/ss", "api/mulseries/values", "api/pd_np", "api/utility/concat", "api/utility/indices", "api/utility/pivot_table", "getting_started", "index", "index_copy", "user_guide/call_method", "user_guide/compatibility_with_pandas", "user_guide/data_structures", "user_guide/grouping", "user_guide/index", "user_guide/indexing", "user_guide/initialization", "user_guide/installation", "user_guide/multi-indexing", "user_guide/numpy_functions", "user_guide/operators", "user_guide/pandas_methods", "user_guide/query"], "filenames": ["__template/index.rst", "api/groupby/__iter__.rst", "api/groupby/by.rst", "api/groupby/call.rst", "api/groupby/groupBy.rst", "api/groupby/indexType.rst", "api/groupby/index_agg.rst", "api/groupby/indices.rst", "api/groupby/mulgroupby.rst", "api/groupby/numpy_functions.rst", "api/groupby/parent.rst", "api/index.rst", "api/muldataframe.MulSeries.rst", "api/muldataframe/__iter__.rst", "api/muldataframe/call.rst", "api/muldataframe/columns.rst", "api/muldataframe/copy.rst", "api/muldataframe/df.rst", "api/muldataframe/drop.rst", "api/muldataframe/drop_duplicates.rst", "api/muldataframe/ds.rst", "api/muldataframe/equals.rst", "api/muldataframe/groupby.rst", "api/muldataframe/iloc.rst", "api/muldataframe/index.rst", "api/muldataframe/indices.rst", "api/muldataframe/insert.rst", "api/muldataframe/iterrows.rst", "api/muldataframe/loc.rst", "api/muldataframe/mcols.rst", "api/muldataframe/mcolumns.rst", "api/muldataframe/melt.rst", "api/muldataframe/mindex.rst", "api/muldataframe/mloc.rst", "api/muldataframe/muldataframe.rst", "api/muldataframe/nloc.rst", "api/muldataframe/pcols.rst", "api/muldataframe/pcolumns.rst", "api/muldataframe/pindex.rst", "api/muldataframe/primary_columns.rst", "api/muldataframe/primary_index.rst", "api/muldataframe/query.rst", "api/muldataframe/reset_index.rst", "api/muldataframe/set_index.rst", "api/muldataframe/shape.rst", "api/muldataframe/sort_values.rst", "api/muldataframe/transpose.rst", "api/muldataframe/values.rst", "api/mulseries/01_index_old.rst", "api/mulseries/__iter__.rst", "api/mulseries/call.rst", "api/mulseries/copy.rst", "api/mulseries/drop.rst", "api/mulseries/drop_duplicates.rst", "api/mulseries/ds.rst", "api/mulseries/equals.rst", "api/mulseries/groupby.rst", "api/mulseries/iloc.rst", "api/mulseries/index.rst", "api/mulseries/indices.rst", "api/mulseries/insert.rst", "api/mulseries/loc.rst", "api/mulseries/mindex.rst", "api/mulseries/mloc.rst", "api/mulseries/mname.rst", "api/mulseries/mulseries.rst", "api/mulseries/name.rst", "api/mulseries/nloc.rst", "api/mulseries/pindex.rst", "api/mulseries/pname.rst", "api/mulseries/primary_index.rst", "api/mulseries/primary_name.rst", "api/mulseries/query.rst", "api/mulseries/reset_index.rst", "api/mulseries/shape.rst", "api/mulseries/sort_values.rst", "api/mulseries/ss.rst", "api/mulseries/values.rst", "api/pd_np.rst", "api/utility/concat.rst", "api/utility/indices.rst", "api/utility/pivot_table.rst", "getting_started.rst", "index.rst", "index_copy.rst", "user_guide/call_method.rst", "user_guide/compatibility_with_pandas.rst", "user_guide/data_structures.rst", "user_guide/grouping.rst", "user_guide/index.rst", "user_guide/indexing.rst", "user_guide/initialization.rst", "user_guide/installation.rst", "user_guide/multi-indexing.rst", "user_guide/numpy_functions.rst", "user_guide/operators.rst", "user_guide/pandas_methods.rst", "user_guide/query.rst"], "titles": ["{title}", "MulGroupBy.__iter__", "MulGroupBy.by", "MulGroupBy.call", "MulGroupBy.groupBy", "MulGroupBy.indexType", "MulGroupBy.index_agg", "MulGroupBy", "MulGroupBy", "numpy functions", "MulGroupBy.parent", "API reference", "muldataframe.MulSeries", "MulDataFrame.__iter__", "MulDataFrame.call", "MulDataFrame.columns", "MulDataFrame.copy", "MulDataFrame.df", "MulDataFrame.drop", "MulDataFrame.drop_duplicates", "MulDataFrame.ds", "MulDataFrame.equals", "MulDataFrame.groupby", "MulDataFrame.iloc", "MulDataFrame.index", "MulDataFrame", "MulDataFrame.insert", "MulDataFrame.iterrows", "MulDataFrame.loc", "MulDataFrame.mcols", "MulDataFrame.mcolumns", "MulDataFrame.melt", "MulDataFrame.mindex", "MulDataFrame.mloc", "MulDataFrame", "MulDataFrame.nloc", "MulDataFrame.pcols", "MulDataFrame.pcolumns", "MulDataFrame.pindex", "MulDataFrame.primary_columns", "MulDataFrame.primary_index", "MulDataFrame.query", "MulDataFrame.reset_index", "MulDataFrame.set_index", "MulDataFrame.shape", "MulDataFrame.sort_values", "MulDataFrame.transpose", "MulDataFrame.values", "MulSeries.index", "MulSeries.__iter__", "MulSeries.call", "MulSeries.copy", "MulSeries.drop", "MulSeries.drop_duplicates", "MulSeries.ds", "MulSeries.equals", "MulSeries.groupby", "MulSeries.iloc", "MulSeries.index", "MulSeries", "MulSeries.insert", "MulSeries.loc", "MulSeries.mindex", "MulSeries.mloc", "MulSeries.mname", "MulSeries", "MulSeries.name", "MulSeries.nloc", "MulSeries.pindex", "MulSeries.pname", "MulSeries.primary_index", "MulSeries.primary_name", "MulSeries.query", "MulSeries.reset_index", "MulSeries.shape", "MulSeries.sort_values", "MulSeries.ss", "MulSeries.values", "Pandas Methods", "concat", "Utility Functions", "pivot_table", "Getting Started", "MulDataFrame documentation", "MulDataFrame documentation", "Call method", "Operators and compatibility", "Data Structures", "Grouping", "User Guide", "Indexing", "Initialization", "Installation", "Multi-indexing", "Numpy functions", "&lt;no title&gt;", "Pandas methods", "Query"], "terms": {"constructor": [0, 12, 34, 42, 65, 73, 91], "attribut": [0, 15, 16, 20, 24, 51, 54, 58, 66, 83, 87, 96], "index": [0, 3, 5, 8, 11, 12, 14, 18, 19, 20, 21, 22, 23, 26, 27, 28, 31, 32, 33, 34, 35, 39, 40, 41, 42, 43, 45, 46, 50, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 65, 67, 70, 72, 73, 75, 79, 81, 83, 84, 85, 86, 87, 88, 89, 91, 97], "method": [0, 2, 6, 9, 10, 11, 12, 14, 19, 22, 41, 45, 46, 50, 53, 56, 72, 75, 84, 86, 88, 89, 94, 97], "make": 1, "object": [1, 3, 4, 7, 18, 21, 22, 26, 34, 42, 43, 45, 52, 55, 56, 60, 73, 75, 79, 83, 85, 86, 87, 88, 91, 93, 94, 96], "iter": [1, 12, 13, 27, 34, 49, 65, 88], "same": [2, 6, 9, 12, 14, 20, 21, 22, 23, 28, 31, 33, 34, 41, 42, 44, 45, 50, 54, 55, 56, 57, 61, 65, 72, 73, 74, 75, 81, 83, 85, 87, 90, 91, 93], "argument": [2, 3, 6, 9, 12, 14, 22, 34, 41, 42, 50, 56, 65, 72, 73, 81, 85, 88, 91, 96], "parent": [2, 3, 5, 6, 7, 8, 11], "": [2, 3, 6, 12, 14, 22, 33, 34, 42, 43, 56, 63, 65, 73, 85, 86, 88, 91, 96], "groupbi": [2, 6, 7, 8, 9, 11, 25, 59, 88], "func": [3, 14, 50], "arg": [3, 14, 45, 50, 75, 81], "use_mul": [3, 9], "fals": [3, 18, 19, 21, 22, 26, 31, 41, 42, 43, 46, 52, 53, 55, 56, 60, 72, 73, 75], "set_primari": [3, 9], "true": [3, 12, 16, 18, 19, 21, 22, 26, 31, 34, 41, 42, 43, 46, 51, 52, 53, 55, 56, 60, 65, 72, 88], "kwarg": [3, 14, 22, 41, 45, 50, 72, 75, 81], "function": [3, 11, 14, 22, 31, 41, 50, 56, 72, 81, 84, 88, 89, 96], "similar": [3, 9, 19, 22, 53, 56, 87, 88, 93, 94], "mulseri": [3, 5, 7, 9, 10, 11, 14, 18, 20, 26, 27, 43, 79, 83, 84, 85, 86, 88, 90, 93, 94, 96], "muldatafram": [3, 5, 7, 8, 9, 10, 11, 48, 50, 52, 54, 56, 60, 63, 65, 67, 73, 78, 79, 81, 85, 86, 88, 90, 92, 93, 94, 96, 97], "appli": [3, 14, 50, 85, 88, 90, 93], "each": [3, 9, 22, 31, 56, 88, 93, 94], "group": [3, 5, 9, 22, 56, 89], "concat": [3, 11, 80, 88], "result": [3, 12, 14, 34, 41, 50, 65, 72, 86, 88, 91, 93, 96], "final": [3, 12, 34, 65, 79, 88, 91, 96], "A": [3, 4, 12, 14, 16, 17, 20, 22, 27, 31, 34, 42, 45, 50, 51, 54, 56, 65, 73, 75, 76, 81, 83, 84, 87, 88], "bool": [3, 12, 16, 18, 19, 21, 22, 26, 31, 34, 42, 43, 46, 51, 52, 53, 55, 56, 60, 65, 73], "default": [3, 12, 16, 18, 19, 22, 26, 31, 34, 42, 43, 46, 51, 52, 53, 56, 60, 65, 73, 79, 85, 88, 94], "an": [3, 9, 12, 14, 15, 24, 26, 34, 49, 58, 60, 65, 66, 83, 86, 87, 88, 91, 93], "option": [3, 12, 19, 34, 65], "determin": [3, 12, 14, 22, 31, 34, 56, 65, 96], "how": [3, 12, 22, 31, 34, 56, 65], "i": [3, 5, 9, 12, 14, 19, 20, 21, 22, 23, 26, 28, 31, 33, 34, 35, 41, 42, 43, 45, 47, 50, 53, 54, 55, 56, 57, 60, 61, 63, 65, 67, 73, 75, 77, 79, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96], "If": [3, 12, 14, 19, 21, 22, 23, 26, 28, 33, 34, 35, 42, 50, 53, 55, 56, 57, 60, 61, 63, 65, 67, 73, 81, 83, 85, 88, 91, 93, 96], "us": [3, 5, 9, 12, 13, 15, 18, 19, 20, 21, 22, 24, 33, 34, 35, 41, 43, 49, 52, 54, 55, 56, 58, 63, 65, 66, 67, 72, 79, 83, 84, 85, 86, 88, 90, 91, 93, 94, 96], "comput": [3, 88], "The": [3, 5, 7, 10, 12, 14, 15, 19, 21, 22, 24, 26, 31, 33, 34, 35, 39, 40, 41, 42, 43, 45, 46, 47, 50, 53, 55, 56, 58, 60, 63, 65, 66, 67, 70, 71, 72, 73, 75, 77, 79, 81, 83, 85, 86, 87, 88, 90, 91, 93, 94, 96], "pass": [3, 14, 41, 72], "valu": [3, 9, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 23, 25, 26, 28, 31, 33, 34, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 73, 74, 75, 76, 81, 83, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97], "seri": [3, 12, 14, 20, 26, 27, 34, 42, 43, 49, 50, 53, 54, 55, 56, 57, 60, 61, 63, 65, 66, 67, 72, 73, 74, 75, 76, 77, 79, 83, 85, 86, 87, 91, 93, 94, 96], "datafram": [3, 5, 9, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 31, 33, 34, 35, 41, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 65, 67, 72, 73, 75, 78, 79, 81, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97], "ar": [3, 9, 12, 14, 20, 21, 22, 26, 31, 33, 34, 45, 46, 50, 54, 55, 56, 60, 63, 65, 67, 75, 78, 79, 81, 83, 85, 86, 87, 88, 91, 93, 96], "thi": [3, 9, 12, 15, 19, 20, 22, 24, 26, 34, 41, 42, 43, 54, 56, 58, 65, 66, 72, 73, 81, 84, 85, 88, 91, 93, 94, 96], "onli": [3, 12, 19, 21, 22, 43, 55, 56, 65, 67, 78, 79, 85, 86, 88, 93, 96], "work": [3, 78, 86, 94, 96], "self": [3, 86], "none": [3, 12, 18, 19, 22, 26, 31, 34, 41, 42, 43, 46, 52, 53, 56, 60, 65, 72, 73, 91], "column": [3, 5, 8, 11, 12, 14, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 39, 41, 42, 43, 45, 46, 50, 52, 56, 60, 63, 65, 67, 72, 73, 75, 79, 81, 83, 85, 86, 87, 88, 90, 91, 93, 94, 97], "label": [3, 12, 18, 19, 22, 26, 28, 34, 43, 45, 52, 56, 60, 61, 65, 91, 93], "select": [3, 18, 33, 43, 52, 63, 67, 83, 93], "It": [3, 5, 12, 19, 20, 22, 23, 26, 28, 31, 34, 43, 47, 53, 54, 56, 57, 60, 61, 65, 77, 79, 88, 91, 93, 96], "set": [3, 41, 90, 93], "primari": [3, 14, 18, 19, 22, 31, 39, 40, 42, 43, 50, 52, 56, 70, 71, 73, 79, 83, 87, 88, 90], "otherwis": [3, 12, 18, 19, 34, 46, 52, 53, 65, 91], "panda": [4, 9, 11, 12, 14, 19, 26, 27, 31, 33, 34, 35, 41, 42, 43, 45, 50, 52, 56, 60, 63, 65, 67, 72, 73, 75, 79, 81, 83, 84, 87, 88, 89, 91, 93, 94], "api": [4, 78, 84, 94, 96], "type": [4, 12, 34, 65, 83, 91, 93], "dataframegroupbi": [4, 8], "must": [5, 14, 26, 50, 60, 85, 91, 93, 94, 96], "can": [5, 9, 12, 14, 18, 33, 34, 35, 43, 50, 63, 65, 67, 79, 83, 85, 86, 88, 90, 91, 93, 94, 96, 97], "agg_mod": [6, 22, 56, 88], "class": [7, 8, 12, 33, 34, 63, 65, 86, 88, 91], "return": [7, 23, 28, 49, 57, 61, 83, 85, 86, 88, 90, 93, 94, 96], "index_agg": [7, 8, 11], "indextyp": [7, 8, 11, 31], "__iter__": [7, 11, 25, 59], "call": [7, 9, 10, 11, 22, 25, 56, 59, 83, 86, 87, 88, 89, 93, 94, 96], "cmm": 8, "m": [8, 12, 50, 52, 56, 60, 63, 65, 67, 72, 73, 75, 79, 85, 87, 91, 93], "liter": [8, 12, 22, 34, 56, 65], "mindex": [8, 11, 24, 25, 58, 59, 87], "mcolumn": [8, 11, 15, 25, 87], "same_onli": [8, 22, 56], "list": [8, 18, 22, 33, 34, 35, 43, 45, 52, 56, 63, 67, 78, 79, 83, 88, 91, 93, 96], "tupl": [8, 22, 56], "see": [9, 86, 90, 96], "user": [9, 78, 93, 94, 96], "guid": [9, 78], "all": [9, 12, 19, 33, 34, 41, 53, 63, 65, 78, 79, 83, 85, 86, 88, 91, 93, 94, 96], "main": [9, 94], "namespac": [9, 94], "have": [9, 12, 14, 22, 33, 34, 50, 56, 63, 65, 85, 94, 96], "been": [9, 94, 96], "ad": [9, 43, 88, 94, 96], "mulgroupbi": [9, 11, 22, 56, 84, 88], "But": 9, "three": [9, 41, 83, 87], "major": 9, "differ": [9, 14, 20, 22, 50, 54, 56, 85, 93], "between": [9, 86, 87, 94], "those": [9, 45, 75, 78, 85], "first": [9, 19, 31, 53, 67, 79, 86, 93, 96], "do": [9, 22, 31, 42, 56, 73, 94, 96], "need": [9, 93], "worri": 9, "abount": 9, "wether": [9, 12, 34, 65], "second": [9, 86, 93], "implicit": 9, "axi": [9, 13, 14, 18, 22, 26, 45, 60, 79, 85], "paramet": [9, 85], "For": [9, 31, 85, 86, 94], "exampl": [9, 83, 85, 86, 93, 94, 96], "mf": [9, 14, 18, 19, 22, 26, 27, 31, 33, 34, 41, 45, 79, 83, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97], "1": [9, 12, 14, 18, 19, 22, 26, 27, 31, 33, 34, 35, 41, 42, 43, 45, 50, 52, 56, 60, 63, 65, 67, 72, 73, 75, 79, 81, 83, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97], "sum": [9, 56, 81, 85, 96], "impli": [9, 12, 65, 91], "you": [9, 20, 33, 54, 63, 67, 83, 85, 88, 90, 93, 96, 97], "overwrit": 9, "behavior": [9, 12, 34, 65, 88, 93], "explicitli": [9, 14], "assign": [9, 33], "0": [9, 18, 22, 26, 31, 33, 42, 45, 56, 60, 63, 67, 72, 73, 75, 79, 81, 85, 86, 87, 88, 90, 93, 94], "though": 9, "rare": 9, "so": [9, 42, 73, 93], "third": 9, "two": [9, 21, 31, 55, 81, 83, 86, 87, 91, 93], "more": [9, 93], "keyword": [9, 14, 50, 85], "than": [9, 33, 43, 63, 83, 93], "origin": 9, "learn": [9, 96], "about": [9, 22, 33, 56, 63, 88], "groubi": 10, "name": [11, 12, 14, 18, 20, 22, 26, 27, 31, 33, 35, 42, 43, 45, 50, 52, 54, 55, 56, 59, 60, 63, 64, 65, 67, 71, 72, 73, 75, 79, 83, 85, 87, 93, 94, 96], "ss": [11, 54, 59, 85, 87], "d": [11, 14, 18, 19, 22, 25, 26, 27, 31, 33, 34, 35, 41, 42, 43, 45, 52, 59, 60, 79, 81, 83, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97], "shape": [11, 25, 26, 33, 35, 59, 60, 85, 87], "primary_index": [11, 22, 25, 38, 42, 56, 59, 68, 73, 87, 88], "primary_nam": [11, 59, 69, 87], "mname": [11, 59, 66, 87], "pindex": [11, 25, 59, 87], "pname": [11, 59, 87], "iloc": [11, 25, 33, 59, 85, 86, 88, 90], "loc": [11, 25, 26, 52, 59, 60, 90, 93], "mloc": [11, 18, 19, 25, 35, 43, 52, 59, 67, 83], "nloc": [11, 25, 33, 59], "copi": [11, 12, 17, 20, 25, 34, 47, 54, 59, 65, 76, 77, 83, 87, 90, 93], "equal": [11, 25, 33, 59, 63, 86], "reset_index": [11, 25, 59], "queri": [11, 25, 59, 83, 89], "sort_valu": [11, 25, 59], "drop_dupl": [11, 25, 59], "insert": [11, 25, 33, 42, 59, 63, 73], "drop": [11, 19, 25, 42, 43, 53, 59, 73, 88], "df": [11, 20, 25, 81, 83, 85, 86, 87, 91, 93, 94], "primary_column": [11, 25, 36, 37, 87], "mcol": [11, 25, 87], "pcolumn": [11, 25, 87], "pcol": [11, 25, 87], "transpos": [11, 25], "set_index": [11, 25], "iterrow": [11, 25], "melt": [11, 25, 81], "util": [11, 84], "pivot_t": [11, 31, 80], "data": [12, 27, 34, 45, 65, 83, 88, 89, 90, 91, 93], "str": [12, 14, 18, 26, 31, 41, 45, 50, 52, 60, 65, 72], "index_init": [12, 34, 65, 91], "overrid": [12, 34, 65, 91], "align": [12, 34, 42, 65, 73], "index_copi": [12, 34, 65], "name_copi": [12, 65], "data_copi": [12, 16, 34, 51, 65], "multi": [12, 34, 65, 83, 84, 87, 89], "being": [12, 34, 65, 91], "also": [12, 31, 34, 65, 85, 86, 90, 91, 93, 96], "ha": [12, 34, 65, 85, 88, 93], "underli": [12, 34, 65, 86, 87], "directli": [12, 34, 65, 88], "access": [12, 34, 65, 83, 87], "Its": [12, 22, 34, 43, 65, 83, 85, 87], "arrai": [12, 19, 26, 43, 60, 65, 90], "like": [12, 18, 26, 34, 35, 43, 52, 60, 65, 67, 91, 93], "dict": [12, 19, 33, 34, 35, 43, 63, 65, 67, 83, 91, 93], "scalar": [12, 14, 23, 26, 28, 42, 50, 57, 60, 61, 65, 73, 85, 93], "either": [12, 14, 26, 34, 45, 65, 85, 91], "kind": [12, 34, 65], "requir": [12, 14, 34, 50, 65, 85, 91], "construct": [12, 34, 65, 85, 91, 96], "from": [12, 14, 18, 20, 31, 33, 34, 50, 52, 54, 63, 65, 85, 87, 91, 92, 93, 96], "empti": [12, 22, 34, 56, 65, 79, 81, 88, 91], "its": [12, 14, 20, 22, 31, 33, 34, 42, 43, 54, 56, 63, 65, 73, 81, 85, 87, 88, 90, 91], "mode": [12, 34, 42, 65, 73], "both": [12, 34, 65, 85, 91], "length": [12, 33, 34, 63, 65, 91], "effect": [12, 65], "argumnet": [12, 31, 65], "In": [12, 31, 65, 85, 93, 94, 96], "uinqu": [12, 34, 65, 91], "overlap": [12, 34, 65, 94], "uniqu": [12, 34, 65], "depend": [12, 34, 65, 79, 85, 91], "Of": [12, 34, 65, 86, 93, 96], "note": [12, 34, 63, 65, 67, 86, 93, 96], "when": [12, 22, 34, 43, 56, 65, 86, 88, 93, 96], "arug": [12, 34, 65], "neither": [12, 34, 65], "even": [12, 34, 65, 93], "thei": [12, 34, 65, 83, 86, 87, 91, 96], "specifi": [12, 18, 19, 26, 34, 43, 52, 60, 65, 79, 88, 91], "As": [12, 34, 65, 86, 93, 94, 96], "duplic": [12, 14, 19, 26, 33, 34, 50, 53, 60, 63, 65, 85, 93], "whether": [12, 16, 18, 21, 22, 26, 31, 34, 43, 46, 51, 52, 55, 56, 60, 65, 94, 96], "creat": [12, 16, 22, 34, 42, 43, 51, 56, 65, 73, 88, 91, 93], "behav": [12, 34, 35, 42, 43, 65, 67, 73, 91, 93], "__init__": [12, 34, 65], "notic": [12, 34, 65, 93], "import": [12, 14, 19, 26, 27, 31, 33, 34, 35, 41, 42, 43, 50, 52, 56, 60, 63, 65, 67, 73, 79, 81, 83, 87, 91], "pd": [12, 14, 18, 19, 22, 26, 27, 31, 33, 34, 35, 41, 42, 43, 45, 50, 52, 56, 60, 63, 65, 67, 72, 73, 75, 79, 81, 83, 87, 91, 93], "md": [12, 14, 19, 26, 27, 31, 33, 34, 35, 41, 42, 43, 50, 52, 56, 60, 63, 65, 67, 73, 79, 81, 83, 87, 91], "2": [12, 14, 18, 19, 22, 26, 27, 31, 33, 34, 35, 41, 42, 43, 45, 50, 52, 56, 60, 63, 65, 67, 72, 73, 75, 79, 81, 83, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97], "3": [12, 14, 18, 19, 22, 26, 27, 31, 33, 34, 35, 41, 42, 43, 45, 50, 52, 56, 60, 63, 65, 67, 72, 73, 75, 79, 81, 83, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97], "5": [12, 14, 18, 19, 22, 26, 27, 31, 33, 34, 35, 41, 42, 43, 45, 50, 52, 60, 65, 73, 79, 81, 83, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97], "6": [12, 14, 18, 19, 22, 26, 27, 31, 33, 34, 35, 41, 42, 43, 45, 50, 52, 60, 65, 73, 79, 81, 83, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97], "b": [12, 14, 18, 19, 22, 26, 27, 31, 33, 34, 35, 41, 42, 43, 45, 50, 52, 56, 60, 63, 65, 67, 72, 73, 75, 79, 81, 83, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97], "x": [12, 14, 18, 19, 22, 26, 27, 31, 33, 34, 35, 41, 42, 43, 45, 50, 52, 56, 60, 63, 65, 67, 72, 73, 75, 79, 83, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97], "y": [12, 14, 18, 19, 22, 26, 27, 31, 33, 34, 35, 41, 42, 43, 45, 50, 52, 56, 60, 63, 65, 67, 72, 73, 75, 79, 83, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97], "g": [12, 14, 18, 19, 22, 26, 27, 31, 33, 34, 35, 41, 42, 43, 45, 50, 52, 56, 60, 63, 65, 67, 72, 73, 75, 79, 83, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97], "h": [12, 56, 63, 65, 67, 72, 75, 87], "e": [12, 26, 56, 60, 63, 65, 67, 72, 75, 81, 83, 87, 96], "f": [12, 14, 18, 19, 22, 26, 27, 31, 33, 34, 35, 41, 42, 43, 45, 50, 52, 56, 60, 63, 65, 67, 72, 73, 75, 79, 83, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97], "cc": [12, 56, 63, 65, 67, 72, 75, 87], "over": [13, 27, 94], "info": 13, "under": [13, 21, 22, 41, 49, 55, 56, 72, 84, 88, 94, 96], "hood": [13, 21, 22, 41, 49, 55, 56, 72, 88, 94, 96], "properli": [14, 19, 23, 28, 50, 53, 57, 61, 85, 90], "arrang": [14, 50, 85], "should": [14, 33, 42, 50, 63, 73, 91, 94], "order": [14, 33, 50, 63, 83, 85, 86, 93], "abov": [14, 50, 63, 85, 86, 93, 94, 96], "direct": 14, "which": [14, 31, 73, 86], "funciton": [14, 85], "string": [14, 41, 50, 72, 91, 96], "valid": [14, 50, 85, 86, 93, 96], "saftisfi": [14, 50], "posit": [14, 23, 35, 50, 57, 67, 93], "1st": [14, 50], "2nd": [14, 50, 93], "onward": [14, 50], "caller": [14, 50], "numpi": [14, 22, 50, 56, 88, 89], "np": [14, 50, 94], "7": [14, 18, 19, 22, 26, 27, 31, 33, 34, 35, 41, 42, 43, 45, 50, 52, 60, 73, 79, 81, 83, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97], "c": [14, 18, 19, 22, 26, 27, 31, 33, 34, 35, 41, 42, 43, 45, 50, 52, 56, 60, 63, 67, 72, 73, 75, 79, 81, 83, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97], "8": [14, 18, 19, 22, 26, 27, 31, 33, 34, 41, 42, 43, 45, 50, 52, 60, 73, 79, 81, 83, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97], "9": [14, 18, 19, 22, 26, 27, 31, 33, 34, 35, 41, 42, 43, 45, 50, 52, 60, 73, 79, 81, 83, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97], "10": [14, 18, 19, 22, 26, 27, 31, 33, 34, 35, 41, 42, 43, 79, 85, 88, 90], "power": [14, 50], "64": [14, 50, 86], "81": [14, 50], "100": 14, "alia": [15, 24, 29, 30, 32, 36, 37, 38, 58, 62, 64, 66, 68, 69, 87], "deep": [16, 17, 20, 51, 54, 76, 87], "inplac": [18, 19, 26, 41, 42, 43, 46, 52, 53, 60, 72, 73], "remov": [18, 19, 52, 53], "row": [18, 26, 27, 31, 33, 35, 83, 91, 93], "correspond": [18, 31], "singl": [18, 52, 88, 93], "number": [18, 26, 52, 60], "hashabl": [18, 26, 52, 60], "modifi": [18, 42, 43, 52, 73], "new": [18, 19, 26, 42, 43, 46, 52, 60, 73, 83, 85], "subset": 19, "keep": [19, 22, 53, 56], "drop_duplci": [19, 53], "except": [19, 23, 28, 35, 41, 45, 53, 57, 61, 67, 75, 79, 81, 86, 90, 93], "slice": [19, 23, 28, 53, 57, 61, 90], "pirmari": 19, "sequenc": 19, "consid": 19, "certain": [19, 94], "identifi": 19, "hierach": [19, 33, 35, 43, 63, 67, 93], "check": [19, 31, 33, 41, 43, 63, 67, 72, 78, 81, 94], "possibl": [19, 43], "ignor": [19, 26, 43, 79, 86], "kei": [19, 22, 33, 35, 43, 56, 63, 67, 88, 93], "last": [19, 33, 53, 63, 67, 93], "handl": [19, 53], "occurr": [19, 53], "perform": [19, 53, 83, 93], "oper": [19, 26, 31, 53, 60, 81, 89, 93, 96], "accord": [19, 53], "partial": [20, 54], "refer": [20, 22, 54, 56, 83, 84, 87], "while": [20, 54, 83, 86, 87, 88, 93], "want": [20, 54], "save": [20, 54], "some": [20, 54, 78, 94, 96], "memori": [20, 54], "other": [21, 33, 45, 55, 79, 85, 86, 93], "test": [21, 55], "compar": [21, 55], "keep_primari": [22, 56, 88], "mapper": [22, 56], "accordingli": [22, 56, 88], "contain": [22, 31, 45, 56, 88, 91], "inform": [22, 56, 78, 88], "map": [22, 56], "grouper": [22, 56], "pleas": [22, 56, 78, 81], "detail": [22, 33, 41, 56, 63, 67, 72, 78, 81], "aggreg": [22, 56], "ident": [22, 88], "put": [22, 56], "them": [22, 56, 78, 85], "reset": [22, 42, 56, 73], "kept": [22, 43, 56, 88], "print": [22, 27, 56, 88], "n": [22, 27, 56, 88], "mean": [22, 88], "base": [23, 28, 57, 61, 93], "locat": [26, 60], "allow": [26, 60, 83], "append": [26, 60], "content": 26, "int": [26, 60], "verifi": [26, 60], "end": [26, 60], "metadata": [26, 31, 60, 88], "4": [26, 31, 60, 81, 86], "pair": 27, "k": [27, 79, 91], "break": [27, 56], "dtype": [27, 33, 85, 87, 94, 96], "int64": [27, 33], "prefix": 31, "value_nam": 31, "ignore_primary_index": 31, "ignore_primary_column": 31, "flatten": 31, "record": 31, "tabl": 31, "occupi": 31, "fill": [31, 42, 73, 93], "revers": [31, 81], "add": [31, 42, 43, 73], "common": 31, "might": [31, 93], "come": 31, "x_": 31, "front": 31, "y_": 31, "custom": 31, "signatur": [31, 91], "def": [31, 85, 86], "where": 31, "includ": [31, 34, 41, 72, 93, 96], "num": 31, "tolist": 31, "x_index": 31, "y_index": 31, "flexibl": [33, 35, 63, 67], "slicer": [33, 35, 63, 67], "introduct": [33, 63, 67], "usag": [33, 63, 67, 81, 96], "less": [33, 63], "hierarch": [33, 63, 83, 93], "leftmost": [33, 63], "rightmost": [33, 63], "element": [33, 63], "although": [33, 63], "python": [33, 63], "doe": [33, 63, 85, 86, 88, 93], "guanrante": [33, 63], "preserv": [33, 63], "most": [33, 63, 94], "case": [33, 63, 94, 96], "ordereddict": [33, 63], "realli": [33, 63], "concern": [33, 63], "dictionari": [33, 35, 63, 67], "z": [33, 56, 72, 75], "show": [33, 93, 94], "To": 33, "columns_init": [34, 91], "both_init": 34, "columns_copi": 34, "both_copi": 34, "ndarrai": 34, "structur": [34, 89, 90], "homogen": 34, "exist": [34, 42, 73, 85], "numer": [35, 67, 88, 93], "exactli": [35, 45, 67, 75, 81, 90, 93], "similarli": [35, 42, 43, 67, 73, 88, 91, 93, 96], "instead": [35, 67, 93], "shorthand": [39, 40, 70, 71, 87], "alon": [41, 83, 97], "combin": [41, 83, 97], "intersect": [41, 93], "quri": 41, "evalu": [41, 72], "specif": [41, 72], "ani": [41, 72, 93], "col_fil": [42, 73], "primary_index_1": [42, 73], "just": [42, 73, 83, 84, 93], "without": [42, 73, 96], "place": [42, 73, 85], "wai": [42, 73], "ss_fill": [42, 73], "lost": 43, "cannot": 43, "delet": 43, "rather": [43, 83, 93], "one": [43, 79, 81, 85, 87], "md2": 43, "sort": [45, 75], "frame": [45, 83, 88, 93], "along": [45, 79], "input": [45, 75, 85, 86, 88, 91, 93, 96], "mostli": [45, 88], "mai": [45, 78], "swap": 46, "mulser": 52, "defaul": 53, "t": [53, 91, 93], "within": 56, "abl": 67, "ascend": 75, "upshot": 78, "avail": [78, 96], "rewritten": [78, 96], "arr": 79, "concaten": 79, "particular": 79, "join": 79, "current": 79, "inner": 79, "support": [79, 88], "obj": 79, "mix": 79, "multiindex": [81, 93], "Then": 81, "web": 81, "page": [81, 93], "foo": 81, "bar": 81, "small": 81, "larg": 81, "aggfunc": 81, "nan": [81, 86], "period": [83, 84], "link": [83, 84], "sourc": [83, 84], "repositori": [83, 84], "consist": [83, 87], "through": [83, 87, 88], "provid": [83, 87], "deepcopi": [83, 87], "guarante": [83, 87], "mf2": [83, 85, 86, 87, 90, 91, 93], "write": 83, "placehold": [83, 93], "below": [83, 86], "whose": [83, 85], "implement": [83, 85, 86, 87, 88, 93], "pattern": [83, 93], "success": [83, 93], "chang": [83, 88, 93], "report": [83, 93], "error": [83, 93, 96], "mixedli": [83, 93], "exmapl": [83, 93, 94], "get": [84, 96], "start": 84, "project": 84, "activ": 84, "develop": 84, "respect": 85, "lambda": 85, "17": [85, 96], "15": 85, "35": 85, "extra": 85, "after": [85, 88], "poli": 85, "31": 85, "These": 85, "illustr": [85, 93], "featur": 85, "reduc": 85, "Not": 85, "applic": 85, "defin": 85, "gener": 85, "match": [85, 86], "necessari": 85, "satisfi": [85, 86, 94], "follow": [85, 91, 93], "rule": [85, 86, 91, 94], "reorder": 85, "notimplementederror": [85, 86], "shown": 85, "run": [85, 96], "procedur": 85, "try": 85, "find": 85, "rais": 85, "11": 85, "sum2": 85, "special": [86, 96], "__add__": 86, "becaus": [86, 88, 90, 93], "themselv": 86, "mf3": [86, 93], "becuas": 86, "inherit": 86, "16": 86, "18": [86, 96], "addit": 86, "mathc": 86, "matter": [86, 94], "pariti": 87, "help": 87, "distinguish": 87, "regular": 87, "counterpart": 88, "thu": 88, "statist": 88, "By": 88, "becom": 88, "multipl": 88, "rang": 88, "integ": 88, "normal": 88, "store": 88, "occur": 88, "instal": 89, "initi": 89, "compat": 89, "__getitem__": 90, "mechan": 90, "rrai": 90, "basic": 91, "indic": 91, "l": 91, "simiarli": 91, "dimens": 91, "diemnsion": 91, "concret": 91, "With": [91, 93, 97], "pypi": 92, "pip": 92, "latest": 92, "dev": 92, "version": 92, "git": 92, "http": 92, "github": 92, "com": 92, "frlender": 92, "what": 93, "we": 93, "Their": 93, "discuss": 93, "later": 93, "syntax": 93, "don": 93, "indexslic": 93, "plain": 93, "3rd": 93, "level": 93, "still": 93, "believ": 93, "our": 93, "intuit": 93, "choic": 93, "expect": 93, "alwai": 93, "lead": 93, "reason": 93, "adher": 93, "idea": 93, "collect": 93, "hand": 93, "from_fram": 93, "ix": 93, "intricaci": 93, "reach": 93, "middl": 93, "fix": 93, "enabl": 93, "log1p": 94, "linalg": 94, "matmul": 94, "There": 94, "take": 94, "preced": 94, "min": 94, "693147": 94, "098612": 94, "197225": 94, "302585": 94, "079442": 94, "attributeerror": 94, "minimum": 94, "explain": 94, "proper": [94, 96], "decid": 94, "fact": 94, "intern": 96, "execut": 96, "expalin": 96, "value_count": 96, "despit": 96, "valueerror": 96, "better": 96, "could": 96, "read": 96, "document": 96, "ones": 96, "borrow": 96}, "objects": {"muldataframe": [[34, 0, 1, "", "MulDataFrame"], [65, 0, 1, "", "MulSeries"], [79, 3, 1, "", "concat"], [81, 3, 1, "", "pivot_table"]], "muldataframe.MulDataFrame": [[13, 1, 1, "", "__iter__"], [14, 1, 1, "", "call"], [15, 2, 1, "", "columns"], [16, 1, 1, "", "copy"], [17, 2, 1, "", "df"], [18, 1, 1, "", "drop"], [19, 1, 1, "", "drop_duplicates"], [20, 2, 1, "", "ds"], [21, 1, 1, "", "equals"], [22, 1, 1, "", "groupby"], [23, 2, 1, "", "iloc"], [24, 2, 1, "", "index"], [26, 1, 1, "", "insert"], [27, 1, 1, "", "iterrows"], [28, 2, 1, "", "loc"], [29, 2, 1, "", "mcols"], [30, 2, 1, "", "mcolumns"], [31, 1, 1, "", "melt"], [32, 2, 1, "", "mindex"], [33, 2, 1, "", "mloc"], [35, 2, 1, "", "nloc"], [36, 2, 1, "", "pcols"], [37, 2, 1, "", "pcolumns"], [38, 2, 1, "", "pindex"], [39, 2, 1, "", "primary_columns"], [40, 2, 1, "", "primary_index"], [41, 1, 1, "", "query"], [42, 1, 1, "", "reset_index"], [43, 1, 1, "", "set_index"], [44, 2, 1, "", "shape"], [45, 1, 1, "", "sort_values"], [46, 1, 1, "", "transpose"], [47, 2, 1, "", "values"]], "muldataframe.MulSeries": [[12, 1, 1, "", "__init__"], [49, 1, 1, "", "__iter__"], [50, 1, 1, "", "call"], [51, 1, 1, "", "copy"], [52, 1, 1, "", "drop"], [53, 1, 1, "", "drop_duplicates"], [54, 2, 1, "", "ds"], [55, 1, 1, "", "equals"], [56, 1, 1, "", "groupby"], [57, 2, 1, "", "iloc"], [58, 2, 1, "", "index"], [60, 1, 1, "", "insert"], [61, 2, 1, "", "loc"], [62, 2, 1, "", "mindex"], [63, 2, 1, "", "mloc"], [64, 2, 1, "", "mname"], [66, 2, 1, "", "name"], [67, 2, 1, "", "nloc"], [68, 2, 1, "", "pindex"], [69, 2, 1, "", "pname"], [70, 2, 1, "", "primary_index"], [71, 2, 1, "", "primary_name"], [72, 1, 1, "", "query"], [73, 1, 1, "", "reset_index"], [74, 2, 1, "", "shape"], [75, 1, 1, "", "sort_values"], [76, 2, 1, "", "ss"], [77, 2, 1, "", "values"]], "muldataframe.cmm": [[8, 0, 1, "", "MulGroupBy"]], "muldataframe.cmm.MulGroupBy": [[1, 1, 1, "", "__iter__"], [2, 2, 1, "", "by"], [3, 1, 1, "", "call"], [4, 2, 1, "", "groupBy"], [5, 2, 1, "", "indexType"], [6, 2, 1, "", "index_agg"], [10, 2, 1, "", "parent"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:attribute", "3": "py:function"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "function", "Python function"]}, "titleterms": {"titl": 0, "mulgroupbi": [1, 2, 3, 4, 5, 6, 7, 8, 10], "__iter__": [1, 13, 49], "call": [3, 14, 50, 85], "paramet": [3, 12, 14, 16, 18, 19, 21, 22, 26, 31, 34, 41, 42, 43, 45, 46, 50, 51, 52, 53, 55, 56, 60, 65, 72, 73, 75, 79, 81], "return": [3, 14, 16, 18, 19, 21, 22, 26, 31, 41, 42, 43, 45, 46, 50, 51, 52, 53, 55, 56, 60, 72, 73, 75, 79, 81], "groupbi": [4, 22, 56], "indextyp": 5, "index_agg": 6, "constructor": [7, 25, 59], "attribut": [7, 25, 59], "method": [7, 25, 59, 78, 85, 96], "numpi": [9, 94], "function": [9, 80, 85, 94], "parent": 10, "api": 11, "refer": 11, "muldatafram": [12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 83, 84, 87, 91], "mulseri": [12, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 87, 91], "exampl": [12, 14, 18, 19, 22, 26, 27, 31, 33, 34, 35, 41, 42, 43, 45, 50, 52, 56, 60, 63, 65, 67, 72, 73, 75, 79, 81], "column": 15, "copi": [16, 51], "df": 17, "drop": [18, 52], "drop_dupl": [19, 53], "d": [20, 54], "equal": [21, 55], "iloc": [23, 57], "index": [24, 25, 48, 58, 59, 90, 93], "insert": [26, 60], "iterrow": 27, "yield": 27, "loc": [28, 61], "mcol": 29, "mcolumn": 30, "melt": 31, "mindex": [32, 62], "mloc": [33, 63, 93], "nloc": [35, 67, 93], "pcol": 36, "pcolumn": 37, "pindex": [38, 68], "primary_column": 39, "primary_index": [40, 70], "queri": [41, 72, 97], "reset_index": [42, 73], "set_index": 43, "shape": [44, 74], "sort_valu": [45, 75], "transpos": 46, "valu": [47, 77], "mname": 64, "name": [66, 91], "pname": 69, "primary_nam": 71, "ss": 76, "panda": [78, 86, 96], "concat": 79, "util": 80, "pivot_t": 81, "get": 82, "start": [82, 83], "document": [83, 84], "quick": 83, "content": 84, "proper": 85, "oper": 86, "compat": 86, "data": 87, "structur": 87, "group": 88, "user": 89, "guid": 89, "initi": 91, "overid": 91, "mode": 91, "align": 91, "default": 91, "behavior": 91, "instal": 92, "multi": 93}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 60}, "alltitles": {"{title}": [[0, "title"]], "MulGroupBy.__iter__": [[1, "mulgroupby-iter"]], "MulGroupBy.by": [[2, "mulgroupby-by"]], "MulGroupBy.call": [[3, "mulgroupby-call"]], "Parameters:": [[3, "parameters"], [14, "parameters"], [50, "parameters"]], "Returns": [[3, "returns"], [14, "returns"], [16, "returns"], [18, "returns"], [19, "returns"], [21, "returns"], [22, "returns"], [26, "returns"], [31, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [45, "returns"], [46, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [55, "returns"], [56, "returns"], [60, "returns"], [72, "returns"], [73, "returns"], [75, "returns"], [79, "returns"], [81, "returns"]], "MulGroupBy.groupBy": [[4, "mulgroupby-groupby"]], "MulGroupBy.indexType": [[5, "mulgroupby-indextype"]], "MulGroupBy.index_agg": [[6, "mulgroupby-index-agg"]], "MulGroupBy": [[7, "mulgroupby"], [8, "mulgroupby"]], "Constructor:": [[7, null], [25, null], [59, null]], "Attributes:": [[7, null], [25, null], [59, null]], "Methods:": [[7, null], [25, null], [59, null]], "numpy functions": [[9, "numpy-functions"]], "MulGroupBy.parent": [[10, "mulgroupby-parent"]], "API reference": [[11, "api-reference"]], "muldataframe.MulSeries": [[12, "muldataframe-mulseries"]], "Parameters": [[12, "parameters"], [16, "parameters"], [18, "parameters"], [19, "parameters"], [21, "parameters"], [22, "parameters"], [26, "parameters"], [31, "parameters"], [34, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [45, "parameters"], [46, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [55, "parameters"], [56, "parameters"], [60, "parameters"], [65, "parameters"], [72, "parameters"], [73, "parameters"], [75, "parameters"], [79, "parameters"], [81, "parameters"]], "Examples:": [[12, "examples"], [65, "examples"]], "MulDataFrame.__iter__": [[13, "muldataframe-iter"]], "MulDataFrame.call": [[14, "muldataframe-call"]], "Examples": [[14, "examples"], [18, "examples"], [19, "examples"], [22, "examples"], [26, "examples"], [27, "examples"], [31, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [45, "examples"], [50, "examples"], [52, "examples"], [56, "examples"], [60, "examples"], [63, "examples"], [67, "examples"], [72, "examples"], [73, "examples"], [75, "examples"], [79, "examples"], [81, "examples"]], "MulDataFrame.columns": [[15, "muldataframe-columns"]], "MulDataFrame.copy": [[16, "muldataframe-copy"]], "MulDataFrame.df": [[17, "muldataframe-df"]], "MulDataFrame.drop": [[18, "muldataframe-drop"]], "MulDataFrame.drop_duplicates": [[19, "muldataframe-drop-duplicates"]], "MulDataFrame.ds": [[20, "muldataframe-ds"]], "MulDataFrame.equals": [[21, "muldataframe-equals"]], "MulDataFrame.groupby": [[22, "muldataframe-groupby"]], "MulDataFrame.iloc": [[23, "muldataframe-iloc"]], "MulDataFrame.index": [[24, "muldataframe-index"]], "MulDataFrame": [[25, "muldataframe"], [34, "muldataframe"], [87, "muldataframe"], [91, "muldataframe"]], "Indexing:": [[25, null]], "MulDataFrame.insert": [[26, "muldataframe-insert"]], "MulDataFrame.iterrows": [[27, "muldataframe-iterrows"]], "Yields:": [[27, "yields"]], "MulDataFrame.loc": [[28, "muldataframe-loc"]], "MulDataFrame.mcols": [[29, "muldataframe-mcols"]], "MulDataFrame.mcolumns": [[30, "muldataframe-mcolumns"]], "MulDataFrame.melt": [[31, "muldataframe-melt"]], "MulDataFrame.mindex": [[32, "muldataframe-mindex"]], "MulDataFrame.mloc": [[33, "muldataframe-mloc"]], "MulDataFrame.nloc": [[35, "muldataframe-nloc"]], "MulDataFrame.pcols": [[36, "muldataframe-pcols"]], "MulDataFrame.pcolumns": [[37, "muldataframe-pcolumns"]], "MulDataFrame.pindex": [[38, "muldataframe-pindex"]], "MulDataFrame.primary_columns": [[39, "muldataframe-primary-columns"]], "MulDataFrame.primary_index": [[40, "muldataframe-primary-index"]], "MulDataFrame.query": [[41, "muldataframe-query"]], "MulDataFrame.reset_index": [[42, "muldataframe-reset-index"]], "MulDataFrame.set_index": [[43, "muldataframe-set-index"]], "MulDataFrame.shape": [[44, "muldataframe-shape"]], "MulDataFrame.sort_values": [[45, "muldataframe-sort-values"]], "MulDataFrame.transpose": [[46, "muldataframe-transpose"]], "MulDataFrame.values": [[47, "muldataframe-values"]], "MulSeries.index": [[48, "mulseries-index"], [58, "mulseries-index"]], "MulSeries.__iter__": [[49, "mulseries-iter"]], "MulSeries.call": [[50, "mulseries-call"]], "MulSeries.copy": [[51, "mulseries-copy"]], "MulSeries.drop": [[52, "mulseries-drop"]], "MulSeries.drop_duplicates": [[53, "mulseries-drop-duplicates"]], "Returns:": [[53, "returns"]], "MulSeries.ds": [[54, "mulseries-ds"]], "MulSeries.equals": [[55, "mulseries-equals"]], "MulSeries.groupby": [[56, "mulseries-groupby"]], "MulSeries.iloc": [[57, "mulseries-iloc"]], "MulSeries": [[59, "mulseries"], [65, "mulseries"], [87, "mulseries"], [91, "mulseries"]], "indexing:": [[59, null]], "MulSeries.insert": [[60, "mulseries-insert"]], "MulSeries.loc": [[61, "mulseries-loc"]], "MulSeries.mindex": [[62, "mulseries-mindex"]], "MulSeries.mloc": [[63, "mulseries-mloc"]], "MulSeries.mname": [[64, "mulseries-mname"]], "MulSeries.name": [[66, "mulseries-name"]], "MulSeries.nloc": [[67, "mulseries-nloc"]], "MulSeries.pindex": [[68, "mulseries-pindex"]], "MulSeries.pname": [[69, "mulseries-pname"]], "MulSeries.primary_index": [[70, "mulseries-primary-index"]], "MulSeries.primary_name": [[71, "mulseries-primary-name"]], "MulSeries.query": [[72, "mulseries-query"]], "MulSeries.reset_index": [[73, "mulseries-reset-index"]], "MulSeries.shape": [[74, "mulseries-shape"]], "MulSeries.sort_values": [[75, "mulseries-sort-values"]], "MulSeries.ss": [[76, "mulseries-ss"]], "MulSeries.values": [[77, "mulseries-values"]], "Pandas Methods": [[78, "pandas-methods"]], "concat": [[79, "concat"]], "Utility Functions": [[80, "utility-functions"]], "pivot_table": [[81, "pivot-table"]], "Getting Started": [[82, "getting-started"]], "MulDataFrame documentation": [[83, "muldataframe-documentation"], [84, "muldataframe-documentation"]], "Quick Start": [[83, "quick-start"]], "Contents:": [[84, null]], "Call method": [[85, "call-method"]], "Proper function": [[85, "proper-function"]], "Operators and compatibility": [[86, "operators-and-compatibility"]], "Compatibility with pandas": [[86, "compatibility-with-pandas"]], "Data Structures": [[87, "data-structures"]], "Grouping": [[88, "grouping"]], "User Guide": [[89, "user-guide"]], "Indexing": [[90, "indexing"]], "Initialization": [[91, "initialization"]], "Overide mode": [[91, "overide-mode"]], "Align mode": [[91, "align-mode"]], "Default behavior": [[91, "default-behavior"]], "Name initialization": [[91, "name-initialization"]], "Installation": [[92, "installation"]], "Multi-indexing": [[93, "multi-indexing"]], "mloc": [[93, "mloc"]], "nloc": [[93, "nloc"]], "Numpy functions": [[94, "numpy-functions"]], "Pandas methods": [[96, "pandas-methods"]], "Query": [[97, "query"]]}, "indexentries": {"__iter__() (muldataframe.cmm.mulgroupby method)": [[1, "muldataframe.cmm.MulGroupBy.__iter__"]], "by (muldataframe.cmm.mulgroupby attribute)": [[2, "muldataframe.cmm.MulGroupBy.by"]], "call() (muldataframe.cmm.mulgroupby method)": [[3, "muldataframe.cmm.MulGroupBy.call"]], "groupby (muldataframe.cmm.mulgroupby attribute)": [[4, "muldataframe.cmm.MulGroupBy.groupBy"]], "indextype (muldataframe.cmm.mulgroupby attribute)": [[5, "muldataframe.cmm.MulGroupBy.indexType"]], "index_agg (muldataframe.cmm.mulgroupby attribute)": [[6, "muldataframe.cmm.MulGroupBy.index_agg"]], "mulgroupby (class in muldataframe.cmm)": [[8, "muldataframe.cmm.MulGroupBy"]], "parent (muldataframe.cmm.mulgroupby attribute)": [[10, "muldataframe.cmm.MulGroupBy.parent"]], "mulseries (class in muldataframe)": [[12, "muldataframe.MulSeries"], [65, "muldataframe.MulSeries"]], "__init__() (muldataframe.mulseries method)": [[12, "muldataframe.MulSeries.__init__"]], "__iter__() (muldataframe.muldataframe method)": [[13, "muldataframe.MulDataFrame.__iter__"]], "call() (muldataframe.muldataframe method)": [[14, "muldataframe.MulDataFrame.call"]], "columns (muldataframe.muldataframe attribute)": [[15, "muldataframe.MulDataFrame.columns"]], "copy() (muldataframe.muldataframe method)": [[16, "muldataframe.MulDataFrame.copy"]], "df (muldataframe.muldataframe attribute)": [[17, "muldataframe.MulDataFrame.df"]], "drop() (muldataframe.muldataframe method)": [[18, "muldataframe.MulDataFrame.drop"]], "drop_duplicates() (muldataframe.muldataframe method)": [[19, "muldataframe.MulDataFrame.drop_duplicates"]], "ds (muldataframe.muldataframe attribute)": [[20, "muldataframe.MulDataFrame.ds"]], "equals() (muldataframe.muldataframe method)": [[21, "muldataframe.MulDataFrame.equals"]], "groupby() (muldataframe.muldataframe method)": [[22, "muldataframe.MulDataFrame.groupby"]], "iloc (muldataframe.muldataframe attribute)": [[23, "muldataframe.MulDataFrame.iloc"]], "index (muldataframe.muldataframe attribute)": [[24, "muldataframe.MulDataFrame.index"]], "insert() (muldataframe.muldataframe method)": [[26, "muldataframe.MulDataFrame.insert"]], "iterrows() (muldataframe.muldataframe method)": [[27, "muldataframe.MulDataFrame.iterrows"]], "loc (muldataframe.muldataframe attribute)": [[28, "muldataframe.MulDataFrame.loc"]], "mcols (muldataframe.muldataframe attribute)": [[29, "muldataframe.MulDataFrame.mcols"]], "mcolumns (muldataframe.muldataframe attribute)": [[30, "muldataframe.MulDataFrame.mcolumns"]], "melt() (muldataframe.muldataframe method)": [[31, "muldataframe.MulDataFrame.melt"]], "mindex (muldataframe.muldataframe attribute)": [[32, "muldataframe.MulDataFrame.mindex"]], "mloc (muldataframe.muldataframe attribute)": [[33, "muldataframe.MulDataFrame.mloc"]], "muldataframe (class in muldataframe)": [[34, "muldataframe.MulDataFrame"]], "nloc (muldataframe.muldataframe attribute)": [[35, "muldataframe.MulDataFrame.nloc"]], "pcols (muldataframe.muldataframe attribute)": [[36, "muldataframe.MulDataFrame.pcols"]], "pcolumns (muldataframe.muldataframe attribute)": [[37, "muldataframe.MulDataFrame.pcolumns"]], "pindex (muldataframe.muldataframe attribute)": [[38, "muldataframe.MulDataFrame.pindex"]], "primary_columns (muldataframe.muldataframe attribute)": [[39, "muldataframe.MulDataFrame.primary_columns"]], "primary_index (muldataframe.muldataframe attribute)": [[40, "muldataframe.MulDataFrame.primary_index"]], "query() (muldataframe.muldataframe method)": [[41, "muldataframe.MulDataFrame.query"]], "reset_index() (muldataframe.muldataframe method)": [[42, "muldataframe.MulDataFrame.reset_index"]], "set_index() (muldataframe.muldataframe method)": [[43, "muldataframe.MulDataFrame.set_index"]], "shape (muldataframe.muldataframe attribute)": [[44, "muldataframe.MulDataFrame.shape"]], "sort_values() (muldataframe.muldataframe method)": [[45, "muldataframe.MulDataFrame.sort_values"]], "transpose() (muldataframe.muldataframe method)": [[46, "muldataframe.MulDataFrame.transpose"]], "values (muldataframe.muldataframe attribute)": [[47, "muldataframe.MulDataFrame.values"]], "values (muldataframe.mulseries attribute)": [[48, "muldataframe.MulSeries.values"], [77, "muldataframe.MulSeries.values"]], "__iter__() (muldataframe.mulseries method)": [[49, "muldataframe.MulSeries.__iter__"]], "call() (muldataframe.mulseries method)": [[50, "muldataframe.MulSeries.call"]], "copy() (muldataframe.mulseries method)": [[51, "muldataframe.MulSeries.copy"]], "drop() (muldataframe.mulseries method)": [[52, "muldataframe.MulSeries.drop"]], "drop_duplicates() (muldataframe.mulseries method)": [[53, "muldataframe.MulSeries.drop_duplicates"]], "ds (muldataframe.mulseries attribute)": [[54, "muldataframe.MulSeries.ds"]], "equals() (muldataframe.mulseries method)": [[55, "muldataframe.MulSeries.equals"]], "groupby() (muldataframe.mulseries method)": [[56, "muldataframe.MulSeries.groupby"]], "iloc (muldataframe.mulseries attribute)": [[57, "muldataframe.MulSeries.iloc"]], "index (muldataframe.mulseries attribute)": [[58, "muldataframe.MulSeries.index"]], "insert() (muldataframe.mulseries method)": [[60, "muldataframe.MulSeries.insert"]], "loc (muldataframe.mulseries attribute)": [[61, "muldataframe.MulSeries.loc"]], "mindex (muldataframe.mulseries attribute)": [[62, "muldataframe.MulSeries.mindex"]], "mloc (muldataframe.mulseries attribute)": [[63, "muldataframe.MulSeries.mloc"]], "mname (muldataframe.mulseries attribute)": [[64, "muldataframe.MulSeries.mname"]], "name (muldataframe.mulseries attribute)": [[66, "muldataframe.MulSeries.name"]], "nloc (muldataframe.mulseries attribute)": [[67, "muldataframe.MulSeries.nloc"]], "pindex (muldataframe.mulseries attribute)": [[68, "muldataframe.MulSeries.pindex"]], "pname (muldataframe.mulseries attribute)": [[69, "muldataframe.MulSeries.pname"]], "primary_index (muldataframe.mulseries attribute)": [[70, "muldataframe.MulSeries.primary_index"]], "primary_name (muldataframe.mulseries attribute)": [[71, "muldataframe.MulSeries.primary_name"]], "query() (muldataframe.mulseries method)": [[72, "muldataframe.MulSeries.query"]], "reset_index() (muldataframe.mulseries method)": [[73, "muldataframe.MulSeries.reset_index"]], "shape (muldataframe.mulseries attribute)": [[74, "muldataframe.MulSeries.shape"]], "sort_values() (muldataframe.mulseries method)": [[75, "muldataframe.MulSeries.sort_values"]], "ss (muldataframe.mulseries attribute)": [[76, "muldataframe.MulSeries.ss"]], "concat() (in module muldataframe)": [[79, "muldataframe.concat"]], "pivot_table() (in module muldataframe)": [[81, "muldataframe.pivot_table"]]}})